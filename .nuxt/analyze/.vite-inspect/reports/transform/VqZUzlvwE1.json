{
  "resolvedId": "D:/quran/nuxt-app - Copy/components/Praying-today.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n\t<div class=\"overflow-x-auto w-full \" v-if=\" props.data[ 0 ] && props.data[ 0 ].timings \">\r\n\t\t<div\r\n\t\t\tclass=\"w-full overflow-x-auto bg-yellow-50 rounded-xl border border-sec flex justify-between whitespace-nowrap items-center px-\">\r\n\t\t\t<div v-for=\"(            prayer, index            ) in             prayerTimes            \"\r\n\t\t\t\t:key=\" index \" class=\"cent__col gap-1 py-2 min-w-[110px] px-5 flex-1 \"\r\n\t\t\t\t:class=\" { 'bg-sec ': nextPrayerIndex === index } \">\r\n\t\t\t\t<template v-if=\" nextPrayerIndex === index \">\r\n\t\t\t\t\t<Image :isrc=\" `/svgs/${ prayer.icon_inverted }.svg` \" :ialt=\" prayer.name \"\r\n\t\t\t\t\t\ticlass=\"w-10 h-10\" />\r\n\t\t\t\t</template>\r\n\t\t\t\t<template v-else>\r\n\t\t\t\t\t<Image :isrc=\" `/svgs/${ prayer.icon }.svg` \" :ialt=\" prayer.name \"\r\n\t\t\t\t\t\ticlass=\"w-10 h-10\" />\r\n\t\t\t\t</template>\r\n\t\t\t\t<div :class=\" { '!text-white ': nextPrayerIndex === index } \"\r\n\t\t\t\t\tclass=\" text-zinc-500 text-sm font-normal font-['Almarai'] leading-tight\">\r\n\t\t\t\t\t{{\r\n\t\t\t\t\t$t( prayer.translation ) }}</div>\r\n\t\t\t\t<div :class=\" { '!text-white ': nextPrayerIndex === index } \"\r\n\t\t\t\t\tclass=\" text-zinc-800 text-base font-medium font-['Roboto'] leading-tight\">\r\n\t\t\t\t\t{{extractTime( props.data[ 0 ].timings[ prayer.key ]) || '–' }}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue'\r\n\r\nconst props = defineProps( {\r\n\tdata: {\r\n\t\ttype: Object,\r\n\t\tdefault: [],\r\n\t},\r\n} )\r\n\r\nconst prayerTimes = [\r\n\t{ key: 'Fajr', name: 'Fajr', icon: 'fajr', icon_inverted: 'fajr', translation: 'infobanner.time1' },\r\n\t{ key: 'Sunrise', name: 'Sunrise', icon: 'sunrise', icon_inverted: 'sunrise', translation: 'infobanner.time2' },\r\n\t{ key: 'Dhuhr', name: 'Dhuhr', icon: 'dhuhr', icon_inverted: 'dhuhr-inverted', translation: 'infobanner.time3' },\r\n\t{ key: 'Asr', name: 'Asr', icon: 'asr', icon_inverted: 'asr-inverted', translation: 'infobanner.time4' },\r\n\t{ key: 'Maghrib', name: 'Maghrib', icon: 'maghrib', icon_inverted: 'maghrib-inverted', translation: 'infobanner.time5' },\r\n\t{ key: 'Isha', name: 'Isha', icon: 'isha', icon_inverted: 'isha', translation: 'infobanner.time6' }\r\n]\r\n\r\nconst nextPrayerIndex = computed( () => {\r\n\tfor ( let i = 0; i < prayerTimes.length; i++ ) {\r\n\t\tif ( isNextPrayer( i ) ) {\r\n\t\t\treturn i\r\n\t\t}\r\n\t}\r\n\treturn -1 // Return -1 if no next prayer is found\r\n} )\r\n\r\nfunction isNextPrayer ( index ) {\r\n\tconst now = new Date()\r\n\tconst currentHours = now.getHours()\r\n\tconst currentMinutes = now.getMinutes()\r\n\tconst nextPrayer = prayerTimes[ index ]\r\n\tconst match = props.data[ 0 ].timings[ nextPrayer.key ].match( /(\\d{2}):(\\d{2})/ )\r\n\tconst prayerHours = parseInt( match[ 1 ], 10 )\r\n\tconst prayerMinutes = parseInt( match[ 2 ], 10 )\r\n\r\n\tconst currentTimeInMinutes = currentHours * 60 + currentMinutes\r\n\tconst prayerTimeInMinutes = prayerHours * 60 + prayerMinutes\r\n\r\n\t// Compare the prayer time with the current time\r\n\treturn prayerTimeInMinutes > currentTimeInMinutes\r\n}\r\n\r\nfunction extractTime ( str ) {\r\n\t// Define a regular expression pattern to match the time part\r\n\tconst pattern = /(\\d{2}:\\d{2})/\r\n\t// Use the exec method of the regular expression to extract the time\r\n\tconst match = pattern.exec( str )\r\n\t// Return the matched time or an empty string if no match found\r\n\treturn match ? match[ 0 ] : ''\r\n}\r\n\r\n</script>\r\n",
      "start": 1710887974164,
      "end": 1710887974803,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1710887974803,
      "end": 1710887974803,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1710887974803,
      "end": 1710887974804,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1710887974804,
      "end": 1710887974804,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1710887974804,
      "end": 1710887974804,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1710887974804,
      "end": 1710887974804,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1710887974804,
      "end": 1710887974804,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1710887974804,
      "end": 1710887974804,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1710887974804,
      "end": 1710887974804,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"overflow-x-auto w-full\"\n}\nconst _hoisted_2 = { class: \"w-full overflow-x-auto bg-yellow-50 rounded-xl border border-sec flex justify-between whitespace-nowrap items-center px-\" }\n\nimport { computed } from 'vue'\r\n\r\n\nconst _sfc_main = {\n  __name: 'Praying-today',\n  props: {\r\n\tdata: {\r\n\t\ttype: Object,\r\n\t\tdefault: [],\r\n\t},\r\n},\n  setup(__props) {\n\r\nconst props = __props\r\n\r\nconst prayerTimes = [\r\n\t{ key: 'Fajr', name: 'Fajr', icon: 'fajr', icon_inverted: 'fajr', translation: 'infobanner.time1' },\r\n\t{ key: 'Sunrise', name: 'Sunrise', icon: 'sunrise', icon_inverted: 'sunrise', translation: 'infobanner.time2' },\r\n\t{ key: 'Dhuhr', name: 'Dhuhr', icon: 'dhuhr', icon_inverted: 'dhuhr-inverted', translation: 'infobanner.time3' },\r\n\t{ key: 'Asr', name: 'Asr', icon: 'asr', icon_inverted: 'asr-inverted', translation: 'infobanner.time4' },\r\n\t{ key: 'Maghrib', name: 'Maghrib', icon: 'maghrib', icon_inverted: 'maghrib-inverted', translation: 'infobanner.time5' },\r\n\t{ key: 'Isha', name: 'Isha', icon: 'isha', icon_inverted: 'isha', translation: 'infobanner.time6' }\r\n]\r\n\r\nconst nextPrayerIndex = computed( () => {\r\n\tfor ( let i = 0; i < prayerTimes.length; i++ ) {\r\n\t\tif ( isNextPrayer( i ) ) {\r\n\t\t\treturn i\r\n\t\t}\r\n\t}\r\n\treturn -1 // Return -1 if no next prayer is found\r\n} )\r\n\r\nfunction isNextPrayer ( index ) {\r\n\tconst now = new Date()\r\n\tconst currentHours = now.getHours()\r\n\tconst currentMinutes = now.getMinutes()\r\n\tconst nextPrayer = prayerTimes[ index ]\r\n\tconst match = props.data[ 0 ].timings[ nextPrayer.key ].match( /(\\d{2}):(\\d{2})/ )\r\n\tconst prayerHours = parseInt( match[ 1 ], 10 )\r\n\tconst prayerMinutes = parseInt( match[ 2 ], 10 )\r\n\r\n\tconst currentTimeInMinutes = currentHours * 60 + currentMinutes\r\n\tconst prayerTimeInMinutes = prayerHours * 60 + prayerMinutes\r\n\r\n\t// Compare the prayer time with the current time\r\n\treturn prayerTimeInMinutes > currentTimeInMinutes\r\n}\r\n\r\nfunction extractTime ( str ) {\r\n\t// Define a regular expression pattern to match the time part\r\n\tconst pattern = /(\\d{2}:\\d{2})/\r\n\t// Use the exec method of the regular expression to extract the time\r\n\tconst match = pattern.exec( str )\r\n\t// Return the matched time or an empty string if no match found\r\n\treturn match ? match[ 0 ] : ''\r\n}\r\n\r\n\nreturn (_ctx, _cache) => {\n  const _component_Image = _resolveComponent(\"Image\")\n\n  return ( props.data[ 0 ] && props.data[ 0 ].timings )\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(prayerTimes, (prayer, index) => {\n            return _createElementVNode(\"div\", {\n              key:  index ,\n              class: _normalizeClass([\"cent__col gap-1 py-2 min-w-[110px] px-5 flex-1\",  { 'bg-sec ': nextPrayerIndex.value === index } ])\n            }, [\n              ( nextPrayerIndex.value === index )\n                ? (_openBlock(), _createBlock(_component_Image, {\n                    key: 0,\n                    isrc:  `/svgs/${ prayer.icon_inverted }.svg` ,\n                    ialt:  prayer.name ,\n                    iclass: \"w-10 h-10\"\n                  }, null, 8, [\"isrc\", \"ialt\"]))\n                : (_openBlock(), _createBlock(_component_Image, {\n                    key: 1,\n                    isrc:  `/svgs/${ prayer.icon }.svg` ,\n                    ialt:  prayer.name ,\n                    iclass: \"w-10 h-10\"\n                  }, null, 8, [\"isrc\", \"ialt\"])),\n              _createElementVNode(\"div\", {\n                class: _normalizeClass([ { '!text-white ': nextPrayerIndex.value === index } , \"text-zinc-500 text-sm font-normal font-['Almarai'] leading-tight\"])\n              }, _toDisplayString(_ctx.$t( prayer.translation )), 3),\n              _createElementVNode(\"div\", {\n                class: _normalizeClass([ { '!text-white ': nextPrayerIndex.value === index } , \"text-zinc-800 text-base font-medium font-['Roboto'] leading-tight\"])\n              }, _toDisplayString(extractTime( props.data[ 0 ].timings[ prayer.key ]) || '–'), 3)\n            ], 2)\n          }), 64))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1710887974804,
      "end": 1710887974817,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1710887974817,
      "end": 1710887974817,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710887974817,
      "end": 1710887974817,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1710887974817,
      "end": 1710887974817,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1710887974817,
      "end": 1710887974817,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1710887974817,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1710887974818,
      "end": 1710887974818,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1710887974818,
      "end": 1710887974821,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1710887974821,
      "end": 1710887974822,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1710887974822,
      "end": 1710887974822,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1710887974822,
      "end": 1710887974822,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1710887974822,
      "end": 1710887974822,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"D:/quran/nuxt-app - Copy/components/Image.vue\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"overflow-x-auto w-full\"\n}\nconst _hoisted_2 = { class: \"w-full overflow-x-auto bg-yellow-50 rounded-xl border border-sec flex justify-between whitespace-nowrap items-center px-\" }\n\nimport { computed } from 'vue'\r\n\r\n\nconst _sfc_main = {\n  __name: 'Praying-today',\n  props: {\r\n\tdata: {\r\n\t\ttype: Object,\r\n\t\tdefault: [],\r\n\t},\r\n},\n  setup(__props) {\n\r\nconst props = __props\r\n\r\nconst prayerTimes = [\r\n\t{ key: 'Fajr', name: 'Fajr', icon: 'fajr', icon_inverted: 'fajr', translation: 'infobanner.time1' },\r\n\t{ key: 'Sunrise', name: 'Sunrise', icon: 'sunrise', icon_inverted: 'sunrise', translation: 'infobanner.time2' },\r\n\t{ key: 'Dhuhr', name: 'Dhuhr', icon: 'dhuhr', icon_inverted: 'dhuhr-inverted', translation: 'infobanner.time3' },\r\n\t{ key: 'Asr', name: 'Asr', icon: 'asr', icon_inverted: 'asr-inverted', translation: 'infobanner.time4' },\r\n\t{ key: 'Maghrib', name: 'Maghrib', icon: 'maghrib', icon_inverted: 'maghrib-inverted', translation: 'infobanner.time5' },\r\n\t{ key: 'Isha', name: 'Isha', icon: 'isha', icon_inverted: 'isha', translation: 'infobanner.time6' }\r\n]\r\n\r\nconst nextPrayerIndex = computed( () => {\r\n\tfor ( let i = 0; i < prayerTimes.length; i++ ) {\r\n\t\tif ( isNextPrayer( i ) ) {\r\n\t\t\treturn i\r\n\t\t}\r\n\t}\r\n\treturn -1 // Return -1 if no next prayer is found\r\n} )\r\n\r\nfunction isNextPrayer ( index ) {\r\n\tconst now = new Date()\r\n\tconst currentHours = now.getHours()\r\n\tconst currentMinutes = now.getMinutes()\r\n\tconst nextPrayer = prayerTimes[ index ]\r\n\tconst match = props.data[ 0 ].timings[ nextPrayer.key ].match( /(\\d{2}):(\\d{2})/ )\r\n\tconst prayerHours = parseInt( match[ 1 ], 10 )\r\n\tconst prayerMinutes = parseInt( match[ 2 ], 10 )\r\n\r\n\tconst currentTimeInMinutes = currentHours * 60 + currentMinutes\r\n\tconst prayerTimeInMinutes = prayerHours * 60 + prayerMinutes\r\n\r\n\t// Compare the prayer time with the current time\r\n\treturn prayerTimeInMinutes > currentTimeInMinutes\r\n}\r\n\r\nfunction extractTime ( str ) {\r\n\t// Define a regular expression pattern to match the time part\r\n\tconst pattern = /(\\d{2}:\\d{2})/\r\n\t// Use the exec method of the regular expression to extract the time\r\n\tconst match = pattern.exec( str )\r\n\t// Return the matched time or an empty string if no match found\r\n\treturn match ? match[ 0 ] : ''\r\n}\r\n\r\n\nreturn (_ctx, _cache) => {\n  const _component_Image = __nuxt_component_0\n\n  return ( props.data[ 0 ] && props.data[ 0 ].timings )\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(prayerTimes, (prayer, index) => {\n            return _createElementVNode(\"div\", {\n              key:  index ,\n              class: _normalizeClass([\"cent__col gap-1 py-2 min-w-[110px] px-5 flex-1\",  { 'bg-sec ': nextPrayerIndex.value === index } ])\n            }, [\n              ( nextPrayerIndex.value === index )\n                ? (_openBlock(), _createBlock(_component_Image, {\n                    key: 0,\n                    isrc:  `/svgs/${ prayer.icon_inverted }.svg` ,\n                    ialt:  prayer.name ,\n                    iclass: \"w-10 h-10\"\n                  }, null, 8, [\"isrc\", \"ialt\"]))\n                : (_openBlock(), _createBlock(_component_Image, {\n                    key: 1,\n                    isrc:  `/svgs/${ prayer.icon }.svg` ,\n                    ialt:  prayer.name ,\n                    iclass: \"w-10 h-10\"\n                  }, null, 8, [\"isrc\", \"ialt\"])),\n              _createElementVNode(\"div\", {\n                class: _normalizeClass([ { '!text-white ': nextPrayerIndex.value === index } , \"text-zinc-500 text-sm font-normal font-['Almarai'] leading-tight\"])\n              }, _toDisplayString(_ctx.$t( prayer.translation )), 3),\n              _createElementVNode(\"div\", {\n                class: _normalizeClass([ { '!text-white ': nextPrayerIndex.value === index } , \"text-zinc-800 text-base font-medium font-['Roboto'] leading-tight\"])\n              }, _toDisplayString(extractTime( props.data[ 0 ].timings[ prayer.key ]) || '–'), 3)\n            ], 2)\n          }), 64))\n        ])\n      ]))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1710887974822,
      "end": 1710887974822,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1710887974823,
      "end": 1710887974823,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1710887974823,
      "end": 1710887974823,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1710887974823,
      "end": 1710887974824,
      "order": "normal"
    }
  ]
}
